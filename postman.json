{
	"info": {
		"_postman_id": "088976bf-9c6f-4963-917c-71ff8d399985",
		"name": "OpenHaus",
		"description": "SmartHome/IoT application",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Components",
			"item": [
				{
					"name": "Rooms",
					"item": [
						{
							"name": "Create new room",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"status code: 200\", () => {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Check room name: input = output\", () => {",
											"",
											"    let res = pm.response.json();",
											"    let req = JSON.parse(pm.request.body);",
											"",
											"    pm.expect(res.name).to.eql(req.name);",
											"",
											"});",
											"",
											"pm.test(\"Check properties\", () => {",
											"",
											"    let res = pm.response.json();",
											"",
											"    let props = [",
											"        \"name\", \"timestamps\", \"_id\",",
											"        \"number\", \"floor\", \"icon\"",
											"    ];",
											"",
											"    Object.keys(res).forEach((key) => {",
											"        pm.expect(props.includes(key)).to.be.true;",
											"    });",
											"",
											"    props.forEach((item) => {",
											"        pm.expect(Object.prototype.hasOwnProperty.call(res, item)).to.be.true;",
											"    });",
											"",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"my Room\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/api/rooms",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"api",
										"rooms"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all rooms",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/api/rooms?limit=100&offset=0",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"api",
										"rooms"
									],
									"query": [
										{
											"key": "limit",
											"value": "100"
										},
										{
											"key": "offset",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get sinlge room",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/api/rooms/<id>",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"api",
										"rooms",
										"<id>"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update existing room",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"New room name ;)\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/api/rooms/611030bb5504e8431d3b8085",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"api",
										"rooms",
										"611030bb5504e8431d3b8085"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete exisiting room",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/api/rooms/611030bb5504e8431d3b8085",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"api",
										"rooms",
										"611030bb5504e8431d3b8085"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Plugins",
					"item": [
						{
							"name": "Create new plugin",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"myCustom plugin\",\n    \"enabled\": false,\n    \"version\": 1.2\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/api/plugins",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"api",
										"plugins"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all plugins",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/api/plugins",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"api",
										"plugins"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get sinlge plugin",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/api/plugins/<id>",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"api",
										"plugins",
										"<id>"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update existing plugins",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": true,\n    \"autostart\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/api/plugins/61103781f897a74ae9ca89c7",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"api",
										"plugins",
										"61103781f897a74ae9ca89c7"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete exisiting plugins",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/api/plugins/61103774f897a74ae9ca89c6",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"api",
										"plugins",
										"61103774f897a74ae9ca89c6"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Devices",
					"item": [
						{
							"name": "Create new devices",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Samsung Fridge\",\n    \"interfaces\": [{\n        \"type\": \"ETHERNET\",\n        \"settings\": {\n            \"host\": \"172.16.5.23\",\n            \"port\": 8080\n        }\n    }]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/api/devices",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"api",
										"devices"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all devices",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/api/devices",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"api",
										"devices"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get sinlge device",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/api/devices/6042785432c51e3e98e7acc0",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"api",
										"devices",
										"6042785432c51e3e98e7acc0"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update existing device",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": false,\n    \"name\": \"SaMsUnG FrIdGe\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/api/devices/611038f1f897a74ae9ca89c9",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"api",
										"devices",
										"611038f1f897a74ae9ca89c9"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete exisiting device",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/api/devices/61103caa50139f51160ae790",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"api",
										"devices",
										"61103caa50139f51160ae790"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Endpoints",
					"item": [
						{
							"name": "Create new devices",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Endpoint name\",\n    \"device\": \"61103caa50139f51160ae790\",\n    \"commands\": [{\n        \"name\": \"Command name\",\n        \"alias\": \"HARDCODED_THING_IN_PLUGIN\"\n    }]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/api/endpoints",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"api",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all endpoints",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/api/endpoints",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"api",
										"endpoints"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get sinlge device",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/api/endpoints/604a75e6eb5de037846df24f",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"api",
										"endpoints",
										"604a75e6eb5de037846df24f"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update existing device",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enabled\": false,\n    \"name\": \"SaMsUnG FrIdGe - Endpoint\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/api/endpoints/61103deda94b5b521bfee0fd",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"api",
										"endpoints",
										"61103deda94b5b521bfee0fd"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete exisiting device",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/api/endpoints/61103caa50139f51160ae790",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"api",
										"endpoints",
										"61103caa50139f51160ae790"
									]
								}
							},
							"response": []
						},
						{
							"name": "Trigger command",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\n    \"key\": \"VOLUME\",\n    \"value\": 15\n}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/api/endpoints/610e865a0c7edd636843a409/commands/610e865a0c7edd636843a406",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"api",
										"endpoints",
										"610e865a0c7edd636843a409",
										"commands",
										"610e865a0c7edd636843a406"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set endpoint state",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[{\n    \"POWER_ON\": true\n}]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/api/endpoints/610e865a0c7edd636843a409/state/610e865a0c7edd536843a108",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"api",
										"endpoints",
										"610e865a0c7edd636843a409",
										"state",
										"610e865a0c7edd536843a108"
									]
								},
								"description": "TODO!"
							},
							"response": []
						}
					]
				},
				{
					"name": "Vault",
					"item": [
						{
							"name": "Create new vault",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.request.payload = JSON.parse(pm.request.body.raw);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"",
											"",
											"console.log(pm.request.payload)",
											"",
											"pm.test(\"Input = Output name\", () => {",
											"",
											"    ",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"FritzBox\",\n    \"identifier\": \"FRITZBOX\",\n    \"fields\": [{\n        \"key\": \"USERNAME\",\n        \"name\": \"Username\"\n    }, {\n        \"key\": \"PASSWORD\",\n        \"name\": \"Password\"\n    }]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/api/vault",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"api",
										"vault"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all vaults",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/api/vault",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"api",
										"vault"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get sinlge vault",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/api/vault/<id>",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"api",
										"vault",
										"<id>"
									]
								}
							},
							"response": []
						},
						{
							"name": "Encrypt secrets/fields",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"PASSWORD\": \"Pa$$w0rd\",\n    \"USERNAME\": \"user-1@example.com\",\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/api/vault/61a15b436d63a6517e1385ed/encrypt",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"api",
										"vault",
										"61a15b436d63a6517e1385ed",
										"encrypt"
									]
								}
							},
							"response": []
						},
						{
							"name": "Decrypt secrets/fields",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"PASSWORD\": \"Pa$$w0rd\",\n    \"USERNAME\": \"user-1@example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/api/vault/6199783105707e5faa429368/decrypt",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"api",
										"vault",
										"6199783105707e5faa429368",
										"decrypt"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update existing vault",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Fritzbox (Router/DECT GW)\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/api/vault/61a15b436d63a6517e1385ed",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"api",
										"vault",
										"61a15b436d63a6517e1385ed"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete exisiting vault",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://{{HOST}}:{{PORT}}/api/vault/<id>",
									"protocol": "http",
									"host": [
										"{{HOST}}"
									],
									"port": "{{PORT}}",
									"path": [
										"api",
										"vault",
										"<id>"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"auth": {
				"type": "apikey",
				"apikey": [
					{
						"key": "value",
						"value": "{{X-AUTH-TOKEN}}",
						"type": "string"
					},
					{
						"key": "key",
						"value": "X-AUTH-TOKEN",
						"type": "string"
					},
					{
						"key": "in",
						"value": "header",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"application/content = json\", () => {",
							"    pm.response.to.be.json",
							"});",
							"",
							"pm.test(\"Response has no error field\", () => {",
							"    let json = pm.response.json();",
							"    pm.expect(!json.error);",
							"});"
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "HOST",
			"value": "127.0.0.1"
		},
		{
			"key": "PORT",
			"value": "8080"
		},
		{
			"key": "X-AUTH-TOKEN",
			"value": "<do login to set token>"
		}
	]
}